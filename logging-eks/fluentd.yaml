apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: logging
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccountName: fluentd
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      tolerations:
        - key: "arch"
          operator: "Equal"
          value: "arm64"
          effect: "NoSchedule"    
        - key: "internal"
          operator: "Equal"
          value: "arm64"
          effect: "NoSchedule"                      
      containers:
      - name: fluentd
        image: <your custom image>
        env:       
        - name: FLUENT_ELASTICSEARCH_HOST
          value: "elasticsearch.logging.svc.cluster.local"
        - name: FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        - name: FLUENT_ELASTICSEARCH_SCHEME
          value: "http"
        - name: FLUENTD_SYSTEMD_CONF
          value: disable
        # IMPORTANT NOTE: This environment variable defines a REGEX parser.
        # It OVERRIDES the <parse> section in your fluent.conf for container logs.
        # If you intend to use the 'multi_format' parser from your fluent.conf,
        # you should REMOVE or comment out this line.
        # Keep this only if your backend logs strictly follow the regex format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
        - name: FLUENT_CONTAINER_TAIL_PARSER_TYPE
          value: /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
        - name: FLUENT_CONTAINER_TAIL_EXCLUDE_PATH
          value: /var/log/containers/fluent*
        # ADDED: Environment variable for Kubernetes Node Name for metadata filter efficiency
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 512Mi
        securityContext: # ADDED: Run as root to gain host file read permissions
          runAsUser: 0  # This sets the container's user to root (UID 0)
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-buffer
          mountPath: /fluentd/buffer
        - name: config-volume
          mountPath: /fluentd/etc/          
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config-volume
        configMap:
          name: fluentd-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-buffer
        emptyDir: {}
